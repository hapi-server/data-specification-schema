{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "HAPI": {
            "description": "HAPI Version",
            "id": "#/definitions/HAPI",
            "pattern": "^3\\.0$",
            "type": "string"
        },
        "HAPIDateTime": {
            "anyOf": [
                {
                    "pattern": "^[0-9]{4}Z$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]{4}-([0-2][0-9][0-9]|3[0-5][0-9]|36[0-6])Z$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]{4}-([0-2][0-9][0-9]|3[0-5][0-9]|36[0-6])T([0-1][0-9]|2[0-4])Z$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]{4}-([0-2][0-9][0-9]|3[0-5][0-9]|36[0-6])T(([0-1][0-9]|2[0-3]):([0-5][0-9])|24:00)Z$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]{4}-([0-2][0-9][0-9]|3[0-5][0-9]|36[0-6])T(([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(\\.([0-9]{0,9}))?|24:00:00(\\.(0{0,9}))?)Z$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])Z$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])Z$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([0-1][0-9]|2[0-4])Z$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(([0-1][0-9]|2[0-3]):([0-5][0-9])|24:00)Z$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(\\.([0-9]{0,9}))?|24:00:00(\\.(0{0,9}))?)Z$",
                    "type": "string"
                },
                {
                    "pattern": "^(1972|1981|1982|1983|1985|1992|1993|1994|1997|2012|2015)-06-30T23:59:60(\\.[0-9]{0,9})?Z",
                    "type": "string"
                },
                {
                    "pattern": "^(197[1-9]|1987|1989|1990|1995|1998|2005|2008|2016)-12-31T23:59:60(\\.[0-9]{0,9})?Z",
                    "type": "string"
                },
                {
                    "pattern": "^(1972|1992|2012)-182T23:59:60(\\.[0-9]{0,9})?Z",
                    "type": "string"
                },
                {
                    "pattern": "^(1981|1982|1983|1985|1993|1994|1997|2015)-181T23:59:60(\\.[0-9]{0,9})?Z",
                    "type": "string"
                },
                {
                    "pattern": "^(1972|2008|2016)-366T23:59:60(\\.[0-9]{0,9})?Z",
                    "type": "string"
                },
                {
                    "pattern": "^(1971|197[3-9]|1987|1989|1990|1995|1998|2005)-365T23:59:60(\\.[0-9]{0,9})?Z",
                    "type": "string"
                }
            ],
            "description": "Regular expressions to handle some basic allowed HAPI date/time formats (a subset of ISO 8601). All times should pass this basic test. Additional tests for valid DOY and DOM are done in code.",
            "id": "#/definitions/HAPIDateTime"
        },
        "HAPIStatus": {
            "description": "Request status",
            "id": "#/definitions/HAPIStatus",
            "properties": {
                "status": {
                    "additionalProperties": false,
                    "description": "Request status",
                    "patternProperties": {
                        "x_.*": {}
                    },
                    "properties": {
                        "code": {
                            "description": "HAPI request status code",
                            "enum": [
                                1200,
                                1201,
                                1400,
                                1401,
                                1402,
                                1403,
                                1404,
                                1405,
                                1406,
                                1407,
                                1408,
                                1409,
                                1410,
                                1411,
                                1412,
                                1500,
                                1501
                            ],
                            "type": "integer"
                        },
                        "message": {
                            "description": "HAPI request status message",
                            "type": "string"
                        }
                    },
                    "required": [
                        "code",
                        "message"
                    ],
                    "type": "object"
                }
            },
            "title": "info",
            "type": "object"
        },
        "UnitsAndLabel": {
            "description": "Units or label schema",
            "id": "#/definitions/UnitsAndLabel",
            "oneOf": [
                {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                {
                    "items": [{
                            "type": "string"
                        }],
                    "minItems": 1,
                    "type": ["array"]
                },
                {
                    "items": [{
                            "type": "array"
                        }],
                    "minItems": 1,
                    "type": ["array"]
                }
            ]
        }
    },
    "dependencies": {
        "sampleStartDate": ["sampleStopDate"],
        "sampleStopDate": ["sampleStartDate"]
    },
    "description": "Server /info response",
    "patternProperties": {
        "x_.*": {}
    },
    "properties": {
        "$schema": {
            "description": "schema declaration is sometimes found in response.",
            "type": "string"
        },
        "HAPI": {
            "$ref": "#/definitions/HAPI"
        },
        "cadence": {
            "description": "Time difference between records as an ISO 8601 duration. This is meant as a guide to the nominal cadence of the data and not necessarily a precise statement about the time between measurements.",
            "type": "string"
        },
        "citation": {
            "description": "How to cite the data set. An actionable DOI is preferred (e.g., https://doi.org/...). This citation differs from the citation in an /info response. Here the citation is for the entity that maintains the data server.",
            "type": "string"
        },
        "contact": {
            "description": "the name of a person to contact for more information about the dataset",
            "type": "string"
        },
        "contactID": {
            "description": "the identifier for the contact person in an external data system",
            "type": "string"
        },
        "coordinateSystemSchema": {
            "description": "The name of the schema or convention that contains a list of coordinate system names and definitions. If this keyword is provided, any coordinateSystemName keyword given in a parameter definition should follow this schema.",
            "enum": [
                "udunits2",
                "astropy3",
                "cdf-cluster"
            ],
            "type": "string"
        },
        "creationDate": {
            "$ref": "#/definitions/HAPIDateTime",
            "description": "the date and time when this dataset was created"
        },
        "definitions": {
            "type": "object"
        },
        "description": {
            "description": "a brief description of the dataset",
            "type": "string"
        },
        "format": {
            "enum": [
                "csv",
                "binary",
                "json"
            ],
            "type": "string"
        },
        "modificationDate": {
            "$ref": "#/definitions/HAPIDateTime",
            "description": "the date and time when this dataset was last modified"
        },
        "parameters": {
            "additionalItems": true,
            "description": "Parameters in dataset",
            "items": {
                "additionalProperties": false,
                "patternProperties": {
                    "x_.*": {}
                },
                "properties": {
                    "bins": {
                        "description": "Bins for components of a with a size having at least one element greater than 1",
                        "items": {
                            "additionalProperties": false,
                            "anyOf": [
                                {
                                    "required": [
                                        "name",
                                        "units",
                                        "centers"
                                    ]
                                },
                                {
                                    "required": [
                                        "name",
                                        "units",
                                        "ranges"
                                    ]
                                },
                                {
                                    "required": [
                                        "name",
                                        "units",
                                        "centers",
                                        "ranges"
                                    ]
                                },
                                {
                                    "required": ["$ref"]
                                }
                            ],
                            "patternProperties": {
                                "x_.*": {}
                            },
                            "properties": {
                                "$ref": {
                                    "description": "references may be made to the definitions area to avoid repetition",
                                    "pattern": "\\#\\/definitions\\/.*",
                                    "type": "string"
                                },
                                "centers": {
                                    "description": "The centers of each bin.",
                                    "oneOf": [
                                        {
                                            "items": {
                                                "minItems": 1,
                                                "type": [
                                                    "number",
                                                    "object"
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "description": "The name of parameter with components that correspond the bin centers; use for time-varying centers",
                                            "type": "string"
                                        },
                                        {
                                            "description": "Any dimension not representing binned data should indicate this by using 'centers': null and not including the 'ranges' attribute.",
                                            "type": "null"
                                        }
                                    ]
                                },
                                "description": {
                                    "description": "A brief comment explaining what the bins represent",
                                    "type": [
                                        "string",
                                        "object"
                                    ]
                                },
                                "label": {
                                    "type": [
                                        "string",
                                        "object"
                                    ]
                                },
                                "name": {
                                    "description": "Name for the dimension (e.g., 'Frequency')",
                                    "type": "string"
                                },
                                "ranges": {
                                    "description": "The boundaries for each bin",
                                    "oneOf": [
                                        {
                                            "items": {
                                                "minItems": 1,
                                                "type": [
                                                    "array",
                                                    "object"
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "description": "The name of parameter with components that correspond to the bin ranges; This parameter must have size=[2,N], where N = size[i], where i is the dimension associated with the bin; use for time-varying bin ranges.",
                                            "type": "string"
                                        }
                                    ]
                                },
                                "units": {
                                    "type": [
                                        "string",
                                        "object"
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "description": {
                        "description": "a brief description of the parameter",
                        "type": [
                            "string",
                            "object"
                        ]
                    },
                    "fill": {
                        "type": [
                            "string",
                            "null",
                            "object"
                        ]
                    },
                    "label": {
                        "$ref": "#/definitions/UnitsAndLabel"
                    },
                    "length": {
                        "description": "Number of characters in parameter (isotime and string parameters only)",
                        "type": [
                            "integer",
                            "object"
                        ]
                    },
                    "name": {
                        "description": "Parameter name",
                        "type": "string"
                    },
                    "size": {
                        "description": "Parameter size",
                        "items": {
                            "type": "integer"
                        },
                        "minItems": 1,
                        "minimum": 1,
                        "type": [
                            "array",
                            "object"
                        ]
                    },
                    "type": {
                        "description": "Parameter type",
                        "enum": [
                            "string",
                            "double",
                            "integer",
                            "isotime"
                        ],
                        "type": [
                            "string",
                            "object"
                        ]
                    },
                    "units": {
                        "$ref": "#/definitions/UnitsAndLabel"
                    }
                },
                "required": [
                    "name",
                    "type",
                    "units",
                    "fill"
                ],
                "type": "object"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
        },
        "resourceID": {
            "description": "an external identifier by which other datasets might know this dataset, such as a DOI or SPASE ID",
            "type": "string"
        },
        "resourceURL": {
            "description": "a link to more information about the dataset",
            "type": "string"
        },
        "sampleStartDate": {
            "$ref": "#/definitions/HAPIDateTime",
            "description": "start of a sample time period for a dataset (inclusive), where the time period should contain a manageable, representative example of valid, non-fill data"
        },
        "sampleStopDate": {
            "$ref": "#/definitions/HAPIDateTime",
            "description": "stop date/time associated with sampleStartDate (exclusive)"
        },
        "startDate": {
            "$ref": "#/definitions/HAPIDateTime",
            "description": "start date/time of parameter data (inclusive)"
        },
        "status": {
            "$ref": "#/definitions/HAPIStatus"
        },
        "stopDate": {
            "$ref": "#/definitions/HAPIDateTime",
            "description": "stop date/time of parameter data (exclusive)"
        },
        "timeStampLocation": {
            "description": "Indicates the positioning of the time stamp within the measurement window.",
            "enum": [
                "begin",
                "center",
                "end",
                "other"
            ],
            "type": "string"
        },
        "unitsSchema": {
            "description": "a string identifying the units convention",
            "enum": [
                "udunits2",
                "astropy3",
                "cdf-cluster"
            ],
            "type": "string"
        }
    },
    "required": [
        "HAPI",
        "status",
        "startDate",
        "stopDate",
        "parameters"
    ],
    "title": "info",
    "type": "object"
}
