{
  "catalog": {
    "description": "Server /catalog response",
    "title": "catalog",
    "type": "object",
    "required": [
      "HAPI",
      "status",
      "catalog"
    ],
    "patternProperties": {
      "x_.*": {}
    },
    "additionalProperties": false,
    "properties": {
      "HAPI": {
        "$ref": "/HAPI"
      },
      "status": {
        "$ref": "/HAPIStatus"
      },
      "$schema": {
        "description": "schema declaration is sometimes found in response.",
        "type": "string"
      },
      "catalog": {
        "description": "Catalog of datasets",
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "id"
          ],
          "patternProperties": {
            "x_.*": {}
          },
          "additionalProperties": false,
          "properties": {
            "id": {
              "description": "Dataset ID",
              "type": "string",
              "uniqueItems": true
            },
            "title": {
              "description": "Optional dataset title",
              "type": "string",
              "uniqueItems": true
            }
          }
        },
        "minItems": 1,
        "additionalItems": true,
        "uniqueItems": true
      }
    }
  },
  "info": {
    "description": "Server /info response",
    "title": "info",
    "type": "object",
    "required": [
      "HAPI",
      "status",
      "startDate",
      "stopDate",
      "parameters"
    ],
    "patternProperties": {
      "x_.*": {}
    },
    "additionalProperties": false,
    "dependencies": {
      "sampleStartDate": [
        "sampleStopDate"
      ],
      "sampleStopDate": [
        "sampleStartDate"
      ]
    },
    "properties": {
      "$schema": {
        "description": "schema declaration is sometimes found in response.",
        "type": "string"
      },
      "HAPI": {
        "$ref": "/HAPI"
      },
      "status": {
        "$ref": "/HAPIStatus"
      },
      "format": {
        "type": "string",
        "enum": [
          "csv",
          "binary",
          "json"
        ]
      },
      "parameters": {
        "description": "Parameters in dataset",
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "name",
            "type",
            "units",
            "fill"
          ],
          "patternProperties": {
            "x_.*": {}
          },
          "additionalProperties": false,
          "properties": {
            "name": {
              "description": "Parameter name",
              "type": "string"
            },
            "type": {
              "description": "Parameter type",
              "type": [
                "string",
                "object"
              ],
              "enum": [
                "string",
                "double",
                "integer",
                "isotime"
              ]
            },
            "length": {
              "description": "Number of characters in parameter (isotime and string parameters only)",
              "type": [
                "integer",
                "object"
              ]
            },
            "size": {
              "description": "Parameter size",
              "type": [
                "array",
                "object"
              ],
              "items": {
                "type": "integer"
              },
              "minItems": 1,
              "minimum": 1
            },
            "units": {
              "$ref": "/UnitsAndLabel"
            },
            "fill": {
              "type": [
                "string",
                "null",
                "object"
              ]
            },
            "description": {
              "description": "a brief description of the parameter",
              "type": [
                "string",
                "object"
              ]
            },
            "label": {
              "$ref": "/UnitsAndLabel"
            },
            "bins": {
              "description": "Bins for components of a with a size having at least one element greater than 1",
              "type": "array",
              "items": {
                "type": "object",
                "patternProperties": {
                  "x_.*": {}
                },
                "additionalProperties": false,
                "anyOf": [
                  {
                    "required": [
                      "name",
                      "units",
                      "centers"
                    ]
                  },
                  {
                    "required": [
                      "name",
                      "units",
                      "ranges"
                    ]
                  },
                  {
                    "required": [
                      "name",
                      "units",
                      "centers",
                      "ranges"
                    ]
                  },
                  {
                    "required": [
                      "$ref"
                    ]
                  }
                ],
                "properties": {
                  "name": {
                    "description": "Name for the dimension (e.g., \u0027Frequency\u0027)",
                    "type": "string"
                  },
                  "centers": {
                    "description": "The centers of each bin.",
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": [
                            "number",
                            "object"
                          ],
                          "minItems": 1
                        }
                      },
                      {
                        "description": "The name of parameter with components that correspond the bin centers; use for time-varying centers",
                        "type": "string"
                      },
                      {
                        "description": "Any dimension not representing binned data should indicate this by using \u0027centers\u0027: null and not including the \u0027ranges\u0027 attribute.",
                        "type": "null"
                      },
                      {
                        "description": "Reference to shared bins in definitions",
                        "type": "object",
                        "properties": {
                          "$ref": {
                            "description": "references may be made to the definitions area to avoid repetition",
                            "pattern": "\\#\\/definitions\\/.*",
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "ranges": {
                    "description": "The boundaries for each bin",
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": [
                            "array",
                            "object"
                          ],
                          "minItems": 1
                        }
                      },
                      {
                        "description": "The name of parameter with components that correspond to the bin ranges; This parameter must have size\u003d[2,N], where N \u003d size[i], where i is the dimension associated with the bin; use for time-varying bin ranges.",
                        "type": "string"
                      },
                      {
                        "description": "Reference to shared ranges in definitions",
                        "type": "object",
                        "properties": {
                          "$ref": {
                            "description": "references may be made to the definitions area to avoid repetition",
                            "pattern": "\\#\\/definitions\\/.*",
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "units": {
                    "type": [
                      "string",
                      "object"
                    ]
                  },
                  "label": {
                    "type": [
                      "string",
                      "object"
                    ]
                  },
                  "description": {
                    "description": "A brief comment explaining what the bins represent",
                    "type": [
                      "string",
                      "object"
                    ]
                  },
                  "$ref": {
                    "description": "references may be made to the definitions area to avoid repetition",
                    "pattern": "\\#\\/definitions\\/.*",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "minItems": 1,
        "additionalItems": true,
        "uniqueItems": true
      },
      "startDate": {
        "description": "start date/time of parameter data (inclusive)",
        "$ref": "/HAPIDateTime"
      },
      "stopDate": {
        "description": "stop date/time of parameter data (exclusive)",
        "$ref": "/HAPIDateTime"
      },
      "timeStampLocation": {
        "description": "Indicates the positioning of the time stamp within the measurement window.",
        "type": "string",
        "enum": [
          "begin",
          "center",
          "end",
          "other"
        ]
      },
      "cadence": {
        "description": "Time difference between records as an ISO 8601 duration. This is meant as a guide to the nominal cadence of the data and not necessarily a precise statement about the time between measurements.",
        "type": "string"
      },
      "sampleStartDate": {
        "description": "start of a sample time period for a dataset (inclusive), where the time period should contain a manageable, representative example of valid, non-fill data",
        "$ref": "/HAPIDateTime"
      },
      "sampleStopDate": {
        "description": "stop date/time associated with sampleStartDate (exclusive)",
        "$ref": "/HAPIDateTime"
      },
      "description": {
        "description": "a brief description of the dataset",
        "type": "string"
      },
      "unitsSchema": {
        "description": "a string identifying the units convention",
        "type": "string",
        "enum": [
          "udunits2",
          "astropy3",
          "cdf-cluster"
        ]
      },
      "coordinateSystemSchema": {
        "description": "The name of the schema or convention that contains a list of coordinate system names and definitions. If this keyword is provided, any coordinateSystemName keyword given in a parameter definition should follow this schema.",
        "type": "string",
        "enum": [
          "udunits2",
          "astropy3",
          "cdf-cluster"
        ]
      },
      "resourceURL": {
        "description": "a link to more information about the dataset",
        "type": "string"
      },
      "resourceID": {
        "description": "an external identifier by which other datasets might know this dataset, such as a DOI or SPASE ID",
        "type": "string"
      },
      "creationDate": {
        "description": "the date and time when this dataset was created",
        "$ref": "/HAPIDateTime"
      },
      "citation": {
        "description": "How to cite the data set. An actionable DOI is preferred (e.g., https://doi.org/...). This citation differs from the citation in an /info response. Here the citation is for the entity that maintains the data server.",
        "type": "string"
      },
      "modificationDate": {
        "description": "the date and time when this dataset was last modified",
        "$ref": "/HAPIDateTime"
      },
      "contact": {
        "description": "the name of a person to contact for more information about the dataset",
        "type": "string"
      },
      "contactID": {
        "description": "the identifier for the contact person in an external data system",
        "type": "string"
      },
      "definitions": {
        "type": "object"
      }
    }
  },
  "HAPI": {
    "description": "HAPI Version",
    "id": "/HAPI",
    "pattern": "^3\\.0$",
    "type": "string"
  },
  "HAPIDateTime": {
    "description": "Regular expressions to handle some basic allowed HAPI date/time formats (a subset of ISO 8601). All times should pass this basic test. Additional tests for valid DOY and DOM are done in code.",
    "id": "/HAPIDateTime",
    "anyOf": [
      {
        "pattern": "^[0-9]{4}Z$",
        "type": "string"
      },
      {
        "pattern": "^[0-9]{4}-([0-2][0-9][0-9]|3[0-5][0-9]|36[0-6])Z$",
        "type": "string"
      },
      {
        "pattern": "^[0-9]{4}-([0-2][0-9][0-9]|3[0-5][0-9]|36[0-6])T([0-1][0-9]|2[0-4])Z$",
        "type": "string"
      },
      {
        "pattern": "^[0-9]{4}-([0-2][0-9][0-9]|3[0-5][0-9]|36[0-6])T(([0-1][0-9]|2[0-3]):([0-5][0-9])|24:00)Z$",
        "type": "string"
      },
      {
        "pattern": "^[0-9]{4}-([0-2][0-9][0-9]|3[0-5][0-9]|36[0-6])T(([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(\\.([0-9]{0,9}))?|24:00:00(\\.(0{0,9}))?)Z$",
        "type": "string"
      },
      {
        "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])Z$",
        "type": "string"
      },
      {
        "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])Z$",
        "type": "string"
      },
      {
        "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([0-1][0-9]|2[0-4])Z$",
        "type": "string"
      },
      {
        "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(([0-1][0-9]|2[0-3]):([0-5][0-9])|24:00)Z$",
        "type": "string"
      },
      {
        "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(\\.([0-9]{0,9}))?|24:00:00(\\.(0{0,9}))?)Z$",
        "type": "string"
      },
      {
        "pattern": "^(1972|1981|1982|1983|1985|1992|1993|1994|1997|2012|2015)-06-30T23:59:60(\\.[0-9]{0,9})?Z",
        "type": "string"
      },
      {
        "pattern": "^(197[1-9]|1987|1989|1990|1995|1998|2005|2008|2016)-12-31T23:59:60(\\.[0-9]{0,9})?Z",
        "type": "string"
      },
      {
        "pattern": "^(1972|1992|2012)-182T23:59:60(\\.[0-9]{0,9})?Z",
        "type": "string"
      },
      {
        "pattern": "^(1981|1982|1983|1985|1993|1994|1997|2015)-181T23:59:60(\\.[0-9]{0,9})?Z",
        "type": "string"
      },
      {
        "pattern": "^(1972|2008|2016)-366T23:59:60(\\.[0-9]{0,9})?Z",
        "type": "string"
      },
      {
        "pattern": "^(1971|197[3-9]|1987|1989|1990|1995|1998|2005)-365T23:59:60(\\.[0-9]{0,9})?Z",
        "type": "string"
      }
    ]
  },
  "HAPIStatus": {
    "description": "Request status",
    "id": "/HAPIStatus",
    "title": "info",
    "type": "object",
    "properties": {
      "status": {
        "description": "Request status",
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "patternProperties": {
          "x_.*": {}
        },
        "additionalProperties": false,
        "properties": {
          "code": {
            "description": "HAPI request status code",
            "type": "integer",
            "enum": [
              1200,
              1201,
              1400,
              1401,
              1402,
              1403,
              1404,
              1405,
              1406,
              1407,
              1408,
              1409,
              1410,
              1411,
              1412,
              1500,
              1501
            ]
          },
          "message": {
            "description": "HAPI request status message",
            "type": "string"
          }
        }
      }
    }
  },
  "UnitsAndLabel": {
    "description": "Units or label schema",
    "id": "/UnitsAndLabel",
    "oneOf": [
      {
        "type": [
          "string",
          "null"
        ]
      },
      {
        "type": [
          "array"
        ],
        "items": [
          {
            "type": "string"
          }
        ],
        "minItems": 1
      },
      {
        "type": [
          "array"
        ],
        "items": [
          {
            "type": "array"
          }
        ],
        "minItems": 1
      }
    ]
  },
  "about": {
    "description": "Server /about response",
    "title": "about",
    "type": "object",
    "required": [
      "HAPI",
      "status",
      "id",
      "title",
      "contact"
    ],
    "patternProperties": {
      "x_.*": {}
    },
    "additionalProperties": false,
    "properties": {
      "HAPI": {
        "$ref": "/HAPI"
      },
      "status": {
        "$ref": "/HAPIStatus"
      },
      "$schema": {
        "description": "schema declaration is sometimes found in response.",
        "type": "string"
      },
      "citation": {
        "description": "How to cite the server. An actionable DOI is preferred (e.g., https://doi.org/...). This citation differs from the citation in an /info response. Here the citation is for the entity that maintains the data server.",
        "type": "string"
      },
      "contact": {
        "description": "Contact information or email address for server issues. HAPI clients should show this contact information when it is certain that an error is due to a problem with the server (as opposed to the client).",
        "type": "string"
      },
      "contactID": {
        "description": "The identifier in the discovery system for information about the contact. For example, a SPASE ID of a person identified in the contact string.",
        "type": "string"
      },
      "description": {
        "description": "A brief description of the type of data the server provides.",
        "type": "string"
      },
      "id": {
        "description": "A unique ID for the server. Ideally, this ID has the organization name in it, e.g., NASA/SPDF/SSCWeb, NASA/SPDF/CDAWeb, INTERMAGNET, UniversityIowa/VanAllen, LASP/TSI, etc.",
        "type": "string"
      },
      "title": {
        "description": "A short human-readable name for the server. The suggested maximum length is 40 characters.",
        "type": "string"
      }
    }
  },
  "capabilities": {
    "description": "Server /capabilities response",
    "title": "capabilities",
    "type": "object",
    "required": [
      "HAPI",
      "outputFormats",
      "status"
    ],
    "patternProperties": {
      "x_.*": {}
    },
    "additionalProperties": false,
    "properties": {
      "HAPI": {
        "$ref": "/HAPI"
      },
      "status": {
        "$ref": "/HAPIStatus"
      },
      "$schema": {
        "description": "schema declaration is sometimes found in response.",
        "type": "string"
      },
      "outputFormats": {
        "description": "Output formats, which must include csv.",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "csv",
            "binary",
            "json"
          ]
        },
        "minItems": 1,
        "additionalItems": true,
        "uniqueItems": true
      }
    }
  }
}
